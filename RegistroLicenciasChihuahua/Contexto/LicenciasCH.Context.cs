//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegistroLicenciasChihuahua.Contexto
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LicenciasCH_QAEntities : DbContext
    {
        public LicenciasCH_QAEntities()
            : base("name=LicenciasCH_QAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ASPStateTempApplication> ASPStateTempApplications { get; set; }
        public virtual DbSet<ASPStateTempSession> ASPStateTempSessions { get; set; }
        public virtual DbSet<dtAccountType> dtAccountTypes { get; set; }
        public virtual DbSet<dtActividad> dtActividads { get; set; }
        public virtual DbSet<dtAgrupador> dtAgrupadors { get; set; }
        public virtual DbSet<dtAlmacen> dtAlmacens { get; set; }
        public virtual DbSet<dtApartadoArchivo> dtApartadoArchivoes { get; set; }
        public virtual DbSet<dtApartado> dtApartados { get; set; }
        public virtual DbSet<dtApiConfig> dtApiConfigs { get; set; }
        public virtual DbSet<dtAprobacionDatosPDV> dtAprobacionDatosPDVs { get; set; }
        public virtual DbSet<dtArchivo> dtArchivoes { get; set; }
        public virtual DbSet<dtArchivoTramite> dtArchivoTramites { get; set; }
        public virtual DbSet<dtArea> dtAreas { get; set; }
        public virtual DbSet<dtAreaSol> dtAreaSols { get; set; }
        public virtual DbSet<dtAseguraPorRamo> dtAseguraPorRamoes { get; set; }
        public virtual DbSet<dtAsignacionUsuarioDestino> dtAsignacionUsuarioDestinoes { get; set; }
        public virtual DbSet<dtAtributo> dtAtributoes { get; set; }
        public virtual DbSet<dtAtributoValor> dtAtributoValors { get; set; }
        public virtual DbSet<dtBitacora> dtBitacoras { get; set; }
        public virtual DbSet<dtBitacoraAlmacen> dtBitacoraAlmacens { get; set; }
        public virtual DbSet<dtBitacoraAlmacenEvidencia> dtBitacoraAlmacenEvidencias { get; set; }
        public virtual DbSet<dtBitacoraDocumentosConcesione> dtBitacoraDocumentosConcesiones { get; set; }
        public virtual DbSet<dtBitacoraLicencia> dtBitacoraLicencias { get; set; }
        public virtual DbSet<dtCadena> dtCadenas { get; set; }
        public virtual DbSet<dtCampania> dtCampanias { get; set; }
        public virtual DbSet<dtCampaniaContacto> dtCampaniaContactoes { get; set; }
        public virtual DbSet<dtCampaniaContactoAsignado> dtCampaniaContactoAsignadoes { get; set; }
        public virtual DbSet<dtCampaniaContactoContestado> dtCampaniaContactoContestadoes { get; set; }
        public virtual DbSet<dtCampaniaContactoCuestionario> dtCampaniaContactoCuestionarios { get; set; }
        public virtual DbSet<dtCampaniaDestino> dtCampaniaDestinoes { get; set; }
        public virtual DbSet<dtCampaniaProducto> dtCampaniaProductoes { get; set; }
        public virtual DbSet<dtCampaniaTipo> dtCampaniaTipoes { get; set; }
        public virtual DbSet<dtCampaniaUbicacionAsignado> dtCampaniaUbicacionAsignadoes { get; set; }
        public virtual DbSet<dtCampaniaUbicacionContestado> dtCampaniaUbicacionContestadoes { get; set; }
        public virtual DbSet<dtCampaniaUbicacionCuestionario> dtCampaniaUbicacionCuestionarios { get; set; }
        public virtual DbSet<dtCampoGrupo> dtCampoGrupoes { get; set; }
        public virtual DbSet<dtCampoRespuesta> dtCampoRespuestas { get; set; }
        public virtual DbSet<dtCampos> dtCampos { get; set; }
        public virtual DbSet<dtCanal> dtCanals { get; set; }
        public virtual DbSet<dtCapacitacion> dtCapacitacions { get; set; }
        public virtual DbSet<dtCasoDocumento> dtCasoDocumentoes { get; set; }
        public virtual DbSet<dtCategoria> dtCategorias { get; set; }
        public virtual DbSet<dtCategoriaProducto> dtCategoriaProductoes { get; set; }
        public virtual DbSet<dtCeckListSeccion1> dtCeckListSeccion1 { get; set; }
        public virtual DbSet<dtCheckList1> dtCheckList1 { get; set; }
        public virtual DbSet<dtCheckListPreguntas1> dtCheckListPreguntas1 { get; set; }
        public virtual DbSet<dtCiudadano> dtCiudadanoes { get; set; }
        public virtual DbSet<dtClavesDescto> dtClavesDesctoes { get; set; }
        public virtual DbSet<dtColonia> dtColonias { get; set; }
        public virtual DbSet<dtConcepto> dtConceptos { get; set; }
        public virtual DbSet<dtConcesione> dtConcesiones { get; set; }
        public virtual DbSet<dtCondicionesCredito> dtCondicionesCreditoes { get; set; }
        public virtual DbSet<dtContacto> dtContactoes { get; set; }
        public virtual DbSet<dtContestadoFormulario> dtContestadoFormularios { get; set; }
        public virtual DbSet<dtContestadoFormularioRespuesta> dtContestadoFormularioRespuestas { get; set; }
        public virtual DbSet<dtCoordenada> dtCoordenadas { get; set; }
        public virtual DbSet<dtCoordenadaGeoCerca> dtCoordenadaGeoCercas { get; set; }
        public virtual DbSet<dtCorreoHistorial> dtCorreoHistorials { get; set; }
        public virtual DbSet<dtCotizacion> dtCotizacions { get; set; }
        public virtual DbSet<dtCotizacionDetalle> dtCotizacionDetalles { get; set; }
        public virtual DbSet<dtCotizacionDetalleSva> dtCotizacionDetalleSvas { get; set; }
        public virtual DbSet<dtCrmAsignacion> dtCrmAsignacions { get; set; }
        public virtual DbSet<dtCuenta> dtCuentas { get; set; }
        public virtual DbSet<dtCuentaCorreo> dtCuentaCorreos { get; set; }
        public virtual DbSet<dtCuotasPDV> dtCuotasPDVs { get; set; }
        public virtual DbSet<dtDestino> dtDestinos { get; set; }
        public virtual DbSet<dtDispositivoHistorial> dtDispositivoHistorials { get; set; }
        public virtual DbSet<dtDomicilioEnvio> dtDomicilioEnvios { get; set; }
        public virtual DbSet<dtEmpresa> dtEmpresas { get; set; }
        public virtual DbSet<dtEmpresaUsuario> dtEmpresaUsuarios { get; set; }
        public virtual DbSet<dtEncuestaCuestionario> dtEncuestaCuestionarios { get; set; }
        public virtual DbSet<dtEncuesta> dtEncuestas { get; set; }
        public virtual DbSet<dtEncuestaUsuario> dtEncuestaUsuarios { get; set; }
        public virtual DbSet<dtEstado> dtEstadoes { get; set; }
        public virtual DbSet<dtEstandarTipoMov> dtEstandarTipoMovs { get; set; }
        public virtual DbSet<dtEstatu> dtEstatus { get; set; }
        public virtual DbSet<dtEstatusLicencia> dtEstatusLicencias { get; set; }
        public virtual DbSet<dtEstatusSol> dtEstatusSols { get; set; }
        public virtual DbSet<dtEtapa> dtEtapas { get; set; }
        public virtual DbSet<dtEtapaTemplate> dtEtapaTemplates { get; set; }
        public virtual DbSet<dtEvaluacion> dtEvaluacions { get; set; }
        public virtual DbSet<dtExamenMedico> dtExamenMedicoes { get; set; }
        public virtual DbSet<dtExamenPsicometrico> dtExamenPsicometricoes { get; set; }
        public virtual DbSet<dtExamenToxico> dtExamenToxicoes { get; set; }
        public virtual DbSet<dtFactura> dtFacturas { get; set; }
        public virtual DbSet<dtFacturaCategoria> dtFacturaCategorias { get; set; }
        public virtual DbSet<dtFolioConocer> dtFolioConocers { get; set; }
        public virtual DbSet<dtFormaEjecutiva> dtFormaEjecutivas { get; set; }
        public virtual DbSet<dtGaleria> dtGalerias { get; set; }
        public virtual DbSet<dtGaleriaDetalle> dtGaleriaDetalles { get; set; }
        public virtual DbSet<dtGastoReporte> dtGastoReportes { get; set; }
        public virtual DbSet<dtGestionCanal> dtGestionCanals { get; set; }
        public virtual DbSet<dtGrupo> dtGrupoes { get; set; }
        public virtual DbSet<dtGrupoUsuario> dtGrupoUsuarios { get; set; }
        public virtual DbSet<dtImporte> dtImportes { get; set; }
        public virtual DbSet<dtJerarquia> dtJerarquias { get; set; }
        public virtual DbSet<dtLicencia> dtLicencias { get; set; }
        public virtual DbSet<dtListaPrecio> dtListaPrecios { get; set; }
        public virtual DbSet<dtLlamadaMotivo> dtLlamadaMotivoes { get; set; }
        public virtual DbSet<dtLogBloqueoCiudadano> dtLogBloqueoCiudadanos { get; set; }
        public virtual DbSet<dtMarker> dtMarkers { get; set; }
        public virtual DbSet<dtMeta> dtMetas { get; set; }
        public virtual DbSet<dtMetrica> dtMetricas { get; set; }
        public virtual DbSet<dtModulo> dtModuloes { get; set; }
        public virtual DbSet<dtModuloAsignacion> dtModuloAsignacions { get; set; }
        public virtual DbSet<dtModuloDetalleComentario> dtModuloDetalleComentarios { get; set; }
        public virtual DbSet<dtModuloRespuesta> dtModuloRespuestas { get; set; }
        public virtual DbSet<dtModuloRespuestaOpcion> dtModuloRespuestaOpcions { get; set; }
        public virtual DbSet<dtMotivosEndoso> dtMotivosEndosoes { get; set; }
        public virtual DbSet<dtMovimiento> dtMovimientos { get; set; }
        public virtual DbSet<dtMovimientosHistorial> dtMovimientosHistorials { get; set; }
        public virtual DbSet<dtMoviqFormaPago> dtMoviqFormaPagoes { get; set; }
        public virtual DbSet<dtMoviqScoring> dtMoviqScorings { get; set; }
        public virtual DbSet<dtMoviqServicio> dtMoviqServicios { get; set; }
        public virtual DbSet<dtMoviqSocrinTipoCliente> dtMoviqSocrinTipoClientes { get; set; }
        public virtual DbSet<dtMoviqSva> dtMoviqSvas { get; set; }
        public virtual DbSet<dtMoviqTipoCliente> dtMoviqTipoClientes { get; set; }
        public virtual DbSet<dtMunicipio> dtMunicipios { get; set; }
        public virtual DbSet<dtMuro> dtMuroes { get; set; }
        public virtual DbSet<dtMuroDetalle> dtMuroDetalles { get; set; }
        public virtual DbSet<dtMuroDetalleUsuario> dtMuroDetalleUsuarios { get; set; }
        public virtual DbSet<dtMuroDetalleVisitado> dtMuroDetalleVisitadoes { get; set; }
        public virtual DbSet<dtMuroLike> dtMuroLikes { get; set; }
        public virtual DbSet<dtNota> dtNotas { get; set; }
        public virtual DbSet<dtNoticia> dtNoticias { get; set; }
        public virtual DbSet<dtObjetivo> dtObjetivoes { get; set; }
        public virtual DbSet<dtObjetivoHistorial> dtObjetivoHistorials { get; set; }
        public virtual DbSet<dtOportunidad> dtOportunidads { get; set; }
        public virtual DbSet<dtOportunidadContacto> dtOportunidadContactoes { get; set; }
        public virtual DbSet<dtOportunidadHistorial> dtOportunidadHistorials { get; set; }
        public virtual DbSet<dtOportunidadProducto> dtOportunidadProductoes { get; set; }
        public virtual DbSet<dtPagoHistorial> dtPagoHistorials { get; set; }
        public virtual DbSet<dtPai> dtPais { get; set; }
        public virtual DbSet<dtPaquete> dtPaquetes { get; set; }
        public virtual DbSet<dtPermiso> dtPermisoes { get; set; }
        public virtual DbSet<dtPlan> dtPlans { get; set; }
        public virtual DbSet<dtPlanProducto> dtPlanProductoes { get; set; }
        public virtual DbSet<dtPotencial> dtPotencials { get; set; }
        public virtual DbSet<dtPreguntasEncuesta> dtPreguntasEncuestas { get; set; }
        public virtual DbSet<dtPrioridad> dtPrioridads { get; set; }
        public virtual DbSet<dtProductoAlmacen> dtProductoAlmacens { get; set; }
        public virtual DbSet<dtProductoApartado> dtProductoApartadoes { get; set; }
        public virtual DbSet<dtProductoCompetidor> dtProductoCompetidors { get; set; }
        public virtual DbSet<dtProductoImagen> dtProductoImagens { get; set; }
        public virtual DbSet<dtProductoServicio> dtProductoServicios { get; set; }
        public virtual DbSet<dtProyecto> dtProyectoes { get; set; }
        public virtual DbSet<dtProyectoRole> dtProyectoRoles { get; set; }
        public virtual DbSet<dtPuesto> dtPuestoes { get; set; }
        public virtual DbSet<dtRamo> dtRamoes { get; set; }
        public virtual DbSet<dtRegion> dtRegions { get; set; }
        public virtual DbSet<dtRegistroEquipo> dtRegistroEquipoes { get; set; }
        public virtual DbSet<dtRegistroToken> dtRegistroTokens { get; set; }
        public virtual DbSet<dtReunion> dtReunions { get; set; }
        public virtual DbSet<dtReunionAcuerdo> dtReunionAcuerdoes { get; set; }
        public virtual DbSet<dtReunionIntegrante> dtReunionIntegrantes { get; set; }
        public virtual DbSet<dtRol> dtRols { get; set; }
        public virtual DbSet<dtRss> dtRsses { get; set; }
        public virtual DbSet<dtSource> dtSources { get; set; }
        public virtual DbSet<dtStatu> dtStatus { get; set; }
        public virtual DbSet<dtSubCanal> dtSubCanals { get; set; }
        public virtual DbSet<dtSubCategoria> dtSubCategorias { get; set; }
        public virtual DbSet<dtTag> dtTags { get; set; }
        public virtual DbSet<dtTagModulo> dtTagModuloes { get; set; }
        public virtual DbSet<dtTarea> dtTareas { get; set; }
        public virtual DbSet<dtTareaFrecuencia> dtTareaFrecuencias { get; set; }
        public virtual DbSet<dtTareaPaso> dtTareaPasoes { get; set; }
        public virtual DbSet<dtTareaPasoArchivo> dtTareaPasoArchivoes { get; set; }
        public virtual DbSet<dtTareaRecurso> dtTareaRecursos { get; set; }
        public virtual DbSet<dtTareaTipo> dtTareaTipoes { get; set; }
        public virtual DbSet<dtTarjetasCirculacionConcesione> dtTarjetasCirculacionConcesiones { get; set; }
        public virtual DbSet<dtTarjetonesConcesione> dtTarjetonesConcesiones { get; set; }
        public virtual DbSet<dtTarjetonesMercantile> dtTarjetonesMercantiles { get; set; }
        public virtual DbSet<dtTemplatePaso> dtTemplatePasos { get; set; }
        public virtual DbSet<dtTemplatePasosTarea> dtTemplatePasosTareas { get; set; }
        public virtual DbSet<dtTerritorio> dtTerritorios { get; set; }
        public virtual DbSet<dtTicket> dtTickets { get; set; }
        public virtual DbSet<dtTicketServicio> dtTicketServicios { get; set; }
        public virtual DbSet<dtTipoDomEnvio> dtTipoDomEnvios { get; set; }
        public virtual DbSet<dtTipoLicencia> dtTipoLicencias { get; set; }
        public virtual DbSet<dtTipoMovimientoSol> dtTipoMovimientoSols { get; set; }
        public virtual DbSet<dtTipoMovRequisito> dtTipoMovRequisitos { get; set; }
        public virtual DbSet<dtTipoNomina> dtTipoNominas { get; set; }
        public virtual DbSet<dtTipoSubscripcion> dtTipoSubscripcions { get; set; }
        public virtual DbSet<dtTitulosConcesione> dtTitulosConcesiones { get; set; }
        public virtual DbSet<dtToken> dtTokens { get; set; }
        public virtual DbSet<dtTokenLogin> dtTokenLogins { get; set; }
        public virtual DbSet<dtTramite> dtTramites { get; set; }
        public virtual DbSet<dtUnidadMedita> dtUnidadMeditas { get; set; }
        public virtual DbSet<dtUsuario> dtUsuarios { get; set; }
        public virtual DbSet<dtUsuarioArea> dtUsuarioAreas { get; set; }
        public virtual DbSet<dtUsuarioZona> dtUsuarioZonas { get; set; }
        public virtual DbSet<dtValor> dtValors { get; set; }
        public virtual DbSet<dtVigencia> dtVigencias { get; set; }
        public virtual DbSet<dtZona> dtZonas { get; set; }
        public virtual DbSet<Number> Numbers { get; set; }
        public virtual DbSet<spfPadLicencia> spfPadLicencias { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<dtBanco> dtBancos { get; set; }
        public virtual DbSet<dtDocumento> dtDocumentos { get; set; }
        public virtual DbSet<dtEstadoCivil> dtEstadoCivils { get; set; }
        public virtual DbSet<dtTipoEmpleado> dtTipoEmpleadoes { get; set; }
        public virtual DbSet<dtTipoMovPorProducto> dtTipoMovPorProductoes { get; set; }
        public virtual DbSet<Query> Queries { get; set; }
        public virtual DbSet<spfCatalogoGral> spfCatalogoGrals { get; set; }
        public virtual DbSet<spfFolio> spfFolios { get; set; }
        public virtual DbSet<spfLicenciasDigitale> spfLicenciasDigitales { get; set; }
        public virtual DbSet<spfLicenciasDigitalesHist> spfLicenciasDigitalesHists { get; set; }
        public virtual DbSet<spfLicenciasDigitalesTemp> spfLicenciasDigitalesTemps { get; set; }
        public virtual DbSet<spfServiciosConcepto> spfServiciosConceptos { get; set; }
        public virtual DbSet<ViewContactoContestada> ViewContactoContestadas { get; set; }
        public virtual DbSet<ViewUbicacionesContestada> ViewUbicacionesContestadas { get; set; }
    
        [DbFunction("LicenciasCH_QAEntities", "fnMailInbox")]
        public virtual IQueryable<fnMailInbox_Result> fnMailInbox(string correo, Nullable<int> empresaId)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnMailInbox_Result>("[LicenciasCH_QAEntities].[fnMailInbox](@correo, @EmpresaId)", correoParameter, empresaIdParameter);
        }
    
        public virtual int CreateTempTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateTempTables");
        }
    
        public virtual int DeleteExpiredSessions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteExpiredSessions");
        }
    
        public virtual int GetHashCode(string input, ObjectParameter hash)
        {
            var inputParameter = input != null ?
                new ObjectParameter("input", input) :
                new ObjectParameter("input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetHashCode", inputParameter, hash);
        }
    
        public virtual int GetMajorVersion(ObjectParameter p_ver)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMajorVersion", p_ver);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sPConteoProductoSemanal_Result> sPConteoProductoSemanal(Nullable<int> campanaId, Nullable<int> destinoId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var campanaIdParameter = campanaId.HasValue ?
                new ObjectParameter("CampanaId", campanaId) :
                new ObjectParameter("CampanaId", typeof(int));
    
            var destinoIdParameter = destinoId.HasValue ?
                new ObjectParameter("DestinoId", destinoId) :
                new ObjectParameter("DestinoId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sPConteoProductoSemanal_Result>("sPConteoProductoSemanal", campanaIdParameter, destinoIdParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int spProcesaLicencias(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcesaLicencias", fechaParameter);
        }
    
        public virtual int spProcesaMovimientos(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcesaMovimientos", fechaParameter);
        }
    
        public virtual ObjectResult<spSearchMail_Result> spSearchMail(string correo, Nullable<int> empresaId)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearchMail_Result>("spSearchMail", correoParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<sPVentaProductoSemanal_Result> sPVentaProductoSemanal(Nullable<int> campanaId, Nullable<int> destinoId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var campanaIdParameter = campanaId.HasValue ?
                new ObjectParameter("CampanaId", campanaId) :
                new ObjectParameter("CampanaId", typeof(int));
    
            var destinoIdParameter = destinoId.HasValue ?
                new ObjectParameter("DestinoId", destinoId) :
                new ObjectParameter("DestinoId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sPVentaProductoSemanal_Result>("sPVentaProductoSemanal", campanaIdParameter, destinoIdParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int TempGetAppID(string appName, ObjectParameter appId)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("appName", appName) :
                new ObjectParameter("appName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempGetAppID", appNameParameter, appId);
        }
    
        public virtual ObjectResult<byte[]> TempGetStateItem(string id, ObjectParameter itemShort, ObjectParameter locked, ObjectParameter lockDate, ObjectParameter lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("TempGetStateItem", idParameter, itemShort, locked, lockDate, lockCookie);
        }
    
        public virtual ObjectResult<byte[]> TempGetStateItem2(string id, ObjectParameter itemShort, ObjectParameter locked, ObjectParameter lockAge, ObjectParameter lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("TempGetStateItem2", idParameter, itemShort, locked, lockAge, lockCookie);
        }
    
        public virtual ObjectResult<byte[]> TempGetStateItem3(string id, ObjectParameter itemShort, ObjectParameter locked, ObjectParameter lockAge, ObjectParameter lockCookie, ObjectParameter actionFlags)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("TempGetStateItem3", idParameter, itemShort, locked, lockAge, lockCookie, actionFlags);
        }
    
        public virtual ObjectResult<byte[]> TempGetStateItemExclusive(string id, ObjectParameter itemShort, ObjectParameter locked, ObjectParameter lockDate, ObjectParameter lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("TempGetStateItemExclusive", idParameter, itemShort, locked, lockDate, lockCookie);
        }
    
        public virtual ObjectResult<byte[]> TempGetStateItemExclusive2(string id, ObjectParameter itemShort, ObjectParameter locked, ObjectParameter lockAge, ObjectParameter lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("TempGetStateItemExclusive2", idParameter, itemShort, locked, lockAge, lockCookie);
        }
    
        public virtual ObjectResult<byte[]> TempGetStateItemExclusive3(string id, ObjectParameter itemShort, ObjectParameter locked, ObjectParameter lockAge, ObjectParameter lockCookie, ObjectParameter actionFlags)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("TempGetStateItemExclusive3", idParameter, itemShort, locked, lockAge, lockCookie, actionFlags);
        }
    
        public virtual int TempGetVersion(ObjectParameter ver)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempGetVersion", ver);
        }
    
        public virtual int TempInsertStateItemLong(string id, byte[] itemLong, Nullable<int> timeout)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var itemLongParameter = itemLong != null ?
                new ObjectParameter("itemLong", itemLong) :
                new ObjectParameter("itemLong", typeof(byte[]));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("timeout", timeout) :
                new ObjectParameter("timeout", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempInsertStateItemLong", idParameter, itemLongParameter, timeoutParameter);
        }
    
        public virtual int TempInsertStateItemShort(string id, byte[] itemShort, Nullable<int> timeout)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var itemShortParameter = itemShort != null ?
                new ObjectParameter("itemShort", itemShort) :
                new ObjectParameter("itemShort", typeof(byte[]));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("timeout", timeout) :
                new ObjectParameter("timeout", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempInsertStateItemShort", idParameter, itemShortParameter, timeoutParameter);
        }
    
        public virtual int TempInsertUninitializedItem(string id, byte[] itemShort, Nullable<int> timeout)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var itemShortParameter = itemShort != null ?
                new ObjectParameter("itemShort", itemShort) :
                new ObjectParameter("itemShort", typeof(byte[]));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("timeout", timeout) :
                new ObjectParameter("timeout", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempInsertUninitializedItem", idParameter, itemShortParameter, timeoutParameter);
        }
    
        public virtual int TempReleaseStateItemExclusive(string id, Nullable<int> lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var lockCookieParameter = lockCookie.HasValue ?
                new ObjectParameter("lockCookie", lockCookie) :
                new ObjectParameter("lockCookie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempReleaseStateItemExclusive", idParameter, lockCookieParameter);
        }
    
        public virtual int TempRemoveStateItem(string id, Nullable<int> lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var lockCookieParameter = lockCookie.HasValue ?
                new ObjectParameter("lockCookie", lockCookie) :
                new ObjectParameter("lockCookie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempRemoveStateItem", idParameter, lockCookieParameter);
        }
    
        public virtual int TempResetTimeout(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempResetTimeout", idParameter);
        }
    
        public virtual int TempUpdateStateItemLong(string id, byte[] itemLong, Nullable<int> timeout, Nullable<int> lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var itemLongParameter = itemLong != null ?
                new ObjectParameter("itemLong", itemLong) :
                new ObjectParameter("itemLong", typeof(byte[]));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("timeout", timeout) :
                new ObjectParameter("timeout", typeof(int));
    
            var lockCookieParameter = lockCookie.HasValue ?
                new ObjectParameter("lockCookie", lockCookie) :
                new ObjectParameter("lockCookie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempUpdateStateItemLong", idParameter, itemLongParameter, timeoutParameter, lockCookieParameter);
        }
    
        public virtual int TempUpdateStateItemLongNullShort(string id, byte[] itemLong, Nullable<int> timeout, Nullable<int> lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var itemLongParameter = itemLong != null ?
                new ObjectParameter("itemLong", itemLong) :
                new ObjectParameter("itemLong", typeof(byte[]));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("timeout", timeout) :
                new ObjectParameter("timeout", typeof(int));
    
            var lockCookieParameter = lockCookie.HasValue ?
                new ObjectParameter("lockCookie", lockCookie) :
                new ObjectParameter("lockCookie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempUpdateStateItemLongNullShort", idParameter, itemLongParameter, timeoutParameter, lockCookieParameter);
        }
    
        public virtual int TempUpdateStateItemShort(string id, byte[] itemShort, Nullable<int> timeout, Nullable<int> lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var itemShortParameter = itemShort != null ?
                new ObjectParameter("itemShort", itemShort) :
                new ObjectParameter("itemShort", typeof(byte[]));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("timeout", timeout) :
                new ObjectParameter("timeout", typeof(int));
    
            var lockCookieParameter = lockCookie.HasValue ?
                new ObjectParameter("lockCookie", lockCookie) :
                new ObjectParameter("lockCookie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempUpdateStateItemShort", idParameter, itemShortParameter, timeoutParameter, lockCookieParameter);
        }
    
        public virtual int TempUpdateStateItemShortNullLong(string id, byte[] itemShort, Nullable<int> timeout, Nullable<int> lockCookie)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var itemShortParameter = itemShort != null ?
                new ObjectParameter("itemShort", itemShort) :
                new ObjectParameter("itemShort", typeof(byte[]));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("timeout", timeout) :
                new ObjectParameter("timeout", typeof(int));
    
            var lockCookieParameter = lockCookie.HasValue ?
                new ObjectParameter("lockCookie", lockCookie) :
                new ObjectParameter("lockCookie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempUpdateStateItemShortNullLong", idParameter, itemShortParameter, timeoutParameter, lockCookieParameter);
        }
    
        public virtual int uspConsLicenciaDigital(string usuario, string curpbusqueda, string codigoPostalIn, Nullable<int> origenTramite)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var curpbusquedaParameter = curpbusqueda != null ?
                new ObjectParameter("curpbusqueda", curpbusqueda) :
                new ObjectParameter("curpbusqueda", typeof(string));
    
            var codigoPostalInParameter = codigoPostalIn != null ?
                new ObjectParameter("codigoPostalIn", codigoPostalIn) :
                new ObjectParameter("codigoPostalIn", typeof(string));
    
            var origenTramiteParameter = origenTramite.HasValue ?
                new ObjectParameter("origenTramite", origenTramite) :
                new ObjectParameter("origenTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspConsLicenciaDigital", usuarioParameter, curpbusquedaParameter, codigoPostalInParameter, origenTramiteParameter);
        }
    
        public virtual ObjectResult<uspConsultaLicencias_Result> uspConsultaLicencias(Nullable<int> tipoConsulta, string parametro)
        {
            var tipoConsultaParameter = tipoConsulta.HasValue ?
                new ObjectParameter("tipoConsulta", tipoConsulta) :
                new ObjectParameter("tipoConsulta", typeof(int));
    
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspConsultaLicencias_Result>("uspConsultaLicencias", tipoConsultaParameter, parametroParameter);
        }
    
        public virtual int uspFoleadorLicencias(Nullable<byte> proceso)
        {
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspFoleadorLicencias", procesoParameter);
        }
    
        public virtual ObjectResult<uspLogin_Result> uspLogin(string usuario, string password)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspLogin_Result>("uspLogin", usuarioParameter, passwordParameter);
        }
    
        public virtual ObjectResult<uspReporteLicenciasEstatus_Result> uspReporteLicenciasEstatus(string usuario, Nullable<int> oficina, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var oficinaParameter = oficina.HasValue ?
                new ObjectParameter("oficina", oficina) :
                new ObjectParameter("oficina", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReporteLicenciasEstatus_Result>("uspReporteLicenciasEstatus", usuarioParameter, oficinaParameter, fechaInicioParameter, fechaFinalParameter);
        }
    }
}
